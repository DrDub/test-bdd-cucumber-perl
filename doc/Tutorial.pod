=head1 INTRODUCTION

This document describes writing a Test::Pherkin test suite for the core Perl
module L<Digest>. L<Digest> calculates message digests in a variety of strings.

=head1 FEATURE FILES

So let's start a feature file, written in the I<Gherkin> language:

 Feature: Simple tests of Digest.pm
   As a developer planning to use Digest.pm
   I want to test the basic functionality of Digest.pm
   In order to have confidence in it

   Background:
     Given a usable Digest class

   Scenario: Check MD5
     Given a Digest MD5 object
     When I've added "foo bar baz" to the object
     And I've added "bat ban shan" to the object
     Then the hex output is "asdfasdfasdf"
     Then the base64 output is "asdfasdfasdf"

  Scenario: Check SHA-1
    Given a Digest SHA-1 object
    When I've added "<data>" to the object
    Then the hex output is "<output>"
    Examples:
      | data | output   |
      | foo  | asdfasdf |
      | bar  | fasdfsdf |
      | baz  | ffffffff |

  Scenario: MD5 longer data
    Given a Digest MD5 object
    When I've added the following to the object
       """
       Here is a chunk of text that works a bit like a HereDoc. We'll split
       off indenting space from the lines in it up to the indentation of the
       first \"\"\"
       """
    Then the hext output is "asdfasdf"

That's a complete feature file! And we'll save it in C<features/basic.feature>.

The file is split in to logical blocks split by one or more blank lines. Blank
lines are the dividers we rely on to parse the file, and the indenting is
unimportant (except in the """ sections).

 Feature: Simple tests of Digest.pm
   As a developer planning to use Digest.pm
   I want to test the basic functionality of Digest.pm
   In order to have confidence in it

The first block names the feature, and gives a human-readable introduction to
it. The first line of your file needs to be a C<Feature:> statement, and
anything following it on that line will be taken as the name of your feature.
The rest of the lines of this block will be saved as the "Conditions of
Satisfaction" - a lump of text that will be displayed but isn't interpreted.

=head1 SCENARIOS AND STEPS

   Background:
     Given a usable Digest class

The next block is a B<Background> section, which is essentially a Scenario block
with a glorified name. You can have one or less Background Scenarios per
Feature file. It contains a single step: C<Given a usable Digest class>. Steps
are the building blocks of your tests. At this point we're going to jump to
our Step Definition file, C<features/step_definitions/basic_steps.pl>.

 #!perl

 use strict;
 use warnings;

 use Test::More;
 use Test::BDD::Cucumber::StepFile;
 use Method::Signatures;






